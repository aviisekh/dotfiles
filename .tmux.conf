# act like vim
setw -g mode-keys vi
setw -g automatic-rename off

# window numbering starts at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# enable mouse mode
set -g mouse on

# move around panes with j and k, a bit like vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10
# act like GNU screen
unbind C-b
set -g prefix C-k

# activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# split windows like vim
bind v split-window -v -c "#{pane_current_path}"
bind b split-window -h -c "#{pane_current_path}"

bind y set-window-option synchronize-panes

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# Allow Vim's FocusGained to work when your terminal gains focus.
# Requires Vim plugin: https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

# Enable color support inside of tmux.
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# resize windows to smallest client only when active
setw -g aggressive-resize on

# no time between C-a and command
set -s escape-time 0

# send command to nested tmux with C-a a
bind-key a send-prefix

# last window with C-a C-a
bind-key C-a last-window

# cursors for windows
bind Left previous-window
bind Right next-window

# move windows
bind S-Left swap-window -t -1
bind S-Right swap-window -t +1

# Copy and paste a bit like vim
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# needed for ruby motion
#set-option -g default-command "login-shell"
######################
### DESIGN CHANGES ###
######################
# https://superuser.com/questions/285381/how-does-the-tmux-color-palette-work/1104214#1104214
# Theme dracula

# loud or quiet?
#set -g visual-activity off
#set -g visual-bell off
#set -g visual-silence off
#setw -g monitor-activity off
#set -g bell-action none

#  modes
# setw -g clock-mode-colour colour5
# setw -g mode-style 'fg=colour1 bg=colour18 bold'

# panes
#set -g pane-border-style 'fg=colour19 bg=colour0'
#set -g pane-active-border-style 'bg=colour0 fg=colour9'


# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour232 fg=colour137 dim'
set -g status-left ''
set -g status-right '#[fg=colour234,bg=colour243] %d/%m #[fg=colour234,bg=colour7] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style 'fg=colour119 bg=colour238'
setw -g window-status-current-format ' #I#[fg=colour231]:#[fg=colour231]#W#[fg=colour231]#F '

#setw -g window-status-style 'fg=colour249 bg=colour235'
setw -g window-status-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '

# setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# messages
# set -g message-style 'fg=colour232 bg=colour16 bold'
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l
